{
  "name": "Local n8n HTTP Client Diagnostic & Fix",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [140, 240],
      "id": "manual-trigger",
      "name": "🔧 Start HTTP Diagnostic",
      "notes": "🚀 Manual Trigger: Click to start comprehensive HTTP client diagnostics for local n8n instances. This workflow tests multiple HTTP configurations to identify and resolve connection issues."
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "diagnostic_session",
              "value": "={{ 'http_fix_' + Date.now() }}"
            },
            {
              "name": "n8n_version", 
              "value": "1.98.2"
            },
            {
              "name": "node_version",
              "value": "24.2.0"
            },
            {
              "name": "installation_type",
              "value": "homebrew"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [360, 240],
      "id": "diagnostic-init",
      "name": "📋 Initialize Diagnostics",
      "notes": "📝 Data Setter: Sets up diagnostic session metadata including n8n version, Node.js version, and installation type for comprehensive HTTP client analysis."
    },
    {
      "parameters": {
        "url": "http://httpbin.org/get",
        "options": {
          "timeout": 5000,
          "headers": {}
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [580, 140],
      "id": "test-http-basic",
      "name": "🌐 Test HTTP (Basic)",
      "notes": "🌐 HTTP Request: Tests basic HTTP connectivity using http:// (not HTTPS) to isolate SSL/TLS issues. Uses minimal configuration to identify fundamental connection problems."
    },
    {
      "parameters": {
        "url": "https://httpbin.org/get",
        "options": {
          "timeout": 10000,
          "headers": {
            "User-Agent": "n8n-diagnostic-test"
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [580, 240],
      "id": "test-https-basic",
      "name": "🔒 Test HTTPS (Basic)",
      "notes": "🌐 HTTP Request: Tests HTTPS connectivity with extended timeout and custom User-Agent. Helps identify SSL/TLS certificate or encryption-related issues."
    },
    {
      "parameters": {
        "url": "https://httpbin.org/get",
        "options": {
          "timeout": 15000,
          "headers": {
            "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"
          },
          "redirect": {
            "maxRedirects": 5
          },
          "response": {
            "response": "autodetect"
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [580, 340],
      "id": "test-https-enhanced",
      "name": "🚀 Test HTTPS (Enhanced)",
      "notes": "🌐 HTTP Request: Tests HTTPS with full browser-like configuration including redirects, response detection, and realistic headers. This tests the most common real-world scenario."
    },
    {
      "parameters": {
        "jsCode": "// ===== COMPREHENSIVE HTTP DIAGNOSTIC ANALYSIS =====\nconst diagnosticData = $('📋 Initialize Diagnostics').first().json;\nconst session = diagnosticData.diagnostic_session;\n\nconsole.log('🔧 ===== LOCAL N8N HTTP CLIENT DIAGNOSTICS =====');\nconsole.log(`📋 Session: ${session}`);\nconsole.log(`🔧 n8n Version: ${diagnosticData.n8n_version}`);\nconsole.log(`⚙️  Node.js Version: ${diagnosticData.node_version}`);\nconsole.log(`📦 Installation: ${diagnosticData.installation_type}`);\nconsole.log('');\n\n// Collect all test results\nconst tests = [\n  { name: 'HTTP Basic', node: '🌐 Test HTTP (Basic)' },\n  { name: 'HTTPS Basic', node: '🔒 Test HTTPS (Basic)' },\n  { name: 'HTTPS Enhanced', node: '🚀 Test HTTPS (Enhanced)' }\n];\n\nconst results = [];\nconst diagnosticSummary = {\n  session,\n  timestamp: new Date().toISOString(),\n  environment: {\n    n8nVersion: diagnosticData.n8n_version,\n    nodeVersion: diagnosticData.node_version,\n    installation: diagnosticData.installation_type,\n    platform: 'macOS'\n  },\n  testResults: {},\n  recommendations: [],\n  criticalIssues: []\n};\n\nfor (const test of tests) {\n  try {\n    const testResult = $(test.node).first().json;\n    const success = testResult.statusCode === 200;\n    \n    results.push({\n      test: test.name,\n      success,\n      statusCode: testResult.statusCode || 0,\n      responseSize: testResult.body ? testResult.body.length : 0,\n      hasHeaders: !!testResult.headers\n    });\n    \n    diagnosticSummary.testResults[test.name] = {\n      success,\n      statusCode: testResult.statusCode || 0,\n      error: success ? null : 'Network connection failed'\n    };\n    \n    console.log(`${success ? '✅' : '❌'} ${test.name}: ${success ? 'SUCCESS' : 'FAILED'} (Status: ${testResult.statusCode || 'NO_RESPONSE'})`);\n    \n  } catch (error) {\n    results.push({\n      test: test.name,\n      success: false,\n      statusCode: 0,\n      responseSize: 0,\n      hasHeaders: false,\n      error: error.message\n    });\n    \n    diagnosticSummary.testResults[test.name] = {\n      success: false,\n      statusCode: 0,\n      error: `Test execution failed: ${error.message}`\n    };\n    \n    console.log(`❌ ${test.name}: EXECUTION_ERROR (${error.message})`);\n  }\n}\n\nconsole.log('');\n\n// Analyze results and provide recommendations\nconst successfulTests = results.filter(r => r.success).length;\nconst totalTests = results.length;\n\nconsole.log(`📊 Test Summary: ${successfulTests}/${totalTests} tests passed`);\n\nif (successfulTests === 0) {\n  console.log('🚨 CRITICAL: All HTTP tests failed - fundamental HTTP client issue');\n  diagnosticSummary.criticalIssues.push('Complete HTTP client failure');\n  diagnosticSummary.recommendations.push('Check n8n installation integrity');\n  diagnosticSummary.recommendations.push('Verify Node.js HTTP module compatibility');\n  diagnosticSummary.recommendations.push('Consider reinstalling n8n via npm instead of Homebrew');\n  diagnosticSummary.recommendations.push('Check for firewall/antivirus blocking n8n HTTP requests');\n} else if (successfulTests < totalTests) {\n  console.log('⚠️  PARTIAL: Some HTTP tests failed - configuration issue');\n  diagnosticSummary.recommendations.push('Check SSL/TLS certificate configuration');\n  diagnosticSummary.recommendations.push('Verify HTTP vs HTTPS handling differences');\n} else {\n  console.log('✅ SUCCESS: All HTTP tests passed - HTTP client is working');\n  diagnosticSummary.recommendations.push('HTTP client is functional - issue may be site-specific');\n}\n\nconsole.log('');\nconsole.log('🔧 RECOMMENDED ACTIONS:');\ndiagnosticSummary.recommendations.forEach((rec, index) => {\n  console.log(`   ${index + 1}. ${rec}`);\n});\n\nconsole.log('');\nconsole.log('📋 DETAILED DIAGNOSTIC DATA:');\nconsole.log(JSON.stringify(diagnosticSummary, null, 2));\n\nreturn [{ json: {\n  diagnosticSummary,\n  testResults: results,\n  nextSteps: [\n    'Copy diagnostic data above',\n    'Share with AI assistant for analysis',\n    'Apply recommended fixes based on test results'\n  ]\n}}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [800, 240],
      "id": "diagnostic-analyzer",
      "name": "🔍 Analyze Results",
      "notes": "⚙️ JavaScript Code: Data Analysis - Comprehensively analyzes all HTTP test results to identify specific failure patterns, root causes, and provides targeted recommendations for fixing local n8n HTTP client issues."
    }
  ],
  "connections": {
    "🔧 Start HTTP Diagnostic": {
      "main": [
        [
          {
            "node": "📋 Initialize Diagnostics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📋 Initialize Diagnostics": {
      "main": [
        [
          {
            "node": "🌐 Test HTTP (Basic)",
            "type": "main",
            "index": 0
          },
          {
            "node": "🔒 Test HTTPS (Basic)",
            "type": "main",
            "index": 0
          },
          {
            "node": "🚀 Test HTTPS (Enhanced)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🌐 Test HTTP (Basic)": {
      "main": [
        [
          {
            "node": "🔍 Analyze Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔒 Test HTTPS (Basic)": {
      "main": [
        [
          {
            "node": "🔍 Analyze Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🚀 Test HTTPS (Enhanced)": {
      "main": [
        [
          {
            "node": "🔍 Analyze Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "http-diagnostic-v1.0",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "n8n-http-diagnostic"
  },
  "id": "n8n-http-diagnostic",
  "tags": ["diagnostic", "http-client", "local-n8n", "troubleshooting"]
} 
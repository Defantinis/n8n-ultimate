{
  "name": "Comprehensive n8n Testing & Learning Workflow",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [140, 240],
      "id": "manual-trigger",
      "name": "🚀 Start Test Suite",
      "notes": "🎯 Manual Trigger: Initiates comprehensive testing of n8n functionality including HTTP client, data processing, and learning capture"
    },
    {
      "parameters": {
        "jsCode": "const testSession = {\n  sessionId: `test-${Date.now()}-comprehensive`,\n  timestamp: new Date().toISOString(),\n  testType: 'comprehensive-validation',\n  environment: {\n    platform: process.platform || 'unknown',\n    nodeVersion: process.version || 'unknown'\n  },\n  tests: {\n    httpClient: { status: 'pending' },\n    dataProcessing: { status: 'pending' },\n    errorHandling: { status: 'pending' }\n  }\n};\n\nconsole.log('🧪 ===== COMPREHENSIVE TEST SUITE INITIALIZED =====');\nconsole.log('📋 Session ID:', testSession.sessionId);\nconsole.log('🔧 Environment:', testSession.environment.platform);\n\nreturn { testSession };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [360, 240],
      "id": "init-test-session",
      "name": "🔧 Initialize Test Session",
      "notes": "🔧 Code Node: Creates test session with unique ID and captures environment details"
    },
    {
      "parameters": {
        "url": "https://httpbin.org/json",
        "options": {
          "timeout": 10000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [580, 240],
      "id": "http-test-basic",
      "name": "🌐 HTTP Test (Basic)",
      "notes": "🌐 HTTP Request: Tests basic HTTP client functionality with httpbin.org JSON endpoint"
    },
    {
      "parameters": {
        "jsCode": "const testSession = $input.first().json.testSession;\nconst httpResult = $input.last().json;\n\n// Update test session with HTTP results\ntestSession.tests.httpClient = {\n  status: 'completed',\n  success: !!httpResult.slideshow,\n  responseSize: JSON.stringify(httpResult).length,\n  hasSlideshow: !!(httpResult && httpResult.slideshow)\n};\n\n// Generate learning insights\nconst learningInsights = [];\nif (testSession.tests.httpClient.success) {\n  learningInsights.push('HTTP client is functional - npm installation fix successful');\n  learningInsights.push('httpbin.org endpoint accessible and returning expected JSON structure');\n} else {\n  learningInsights.push('HTTP client may still have issues - requires investigation');\n}\n\n// Console output with detailed results\nconsole.log('🌐 ===== HTTP CLIENT TEST RESULTS =====');\nconsole.log('✅ HTTP Test:', testSession.tests.httpClient.success ? 'SUCCESS' : 'FAILED');\nconsole.log('📊 Response Size:', testSession.tests.httpClient.responseSize, 'characters');\nconsole.log('🎯 Session ID:', testSession.sessionId);\nconsole.log('');\nconsole.log('🧠 LEARNING INSIGHTS:');\nlearningInsights.forEach(insight => console.log('  •', insight));\n\nreturn { testSession, learningInsights };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [800, 240],
      "id": "analyze-results",
      "name": "📊 Analyze & Learn",
      "notes": "📊 Code Node: Analyzes HTTP test results and generates learning insights for continuous improvement"
    }
  ],
  "connections": {
    "manual-trigger": {
      "main": [
        [
          {
            "node": "init-test-session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "init-test-session": {
      "main": [
        [
          {
            "node": "http-test-basic",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "http-test-basic": {
      "main": [
        [
          {
            "node": "analyze-results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
} 